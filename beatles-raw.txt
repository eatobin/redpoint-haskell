slurped:
(slurp "beatles2014.txt")
=>
"The Beatles, 2014
 RinSta, Ringo Starr, JohLen, GeoHar
 JohLen, John Lennon, PauMcc, RinSta
 GeoHar, George Harrison, RinSta, PauMcc
 PauMcc, Paul McCartney, GeoHar, JohLen
 "

 "The Beatles, 2014\nRinSta, Ringo Starr, JohLen, GeoHar\nJohLen, John Lennon, PauMcc, RinSta\nGeoHar, George Harrison, RinSta, PauMcc\nPauMcc, Paul McCartney, GeoHar, JohLen"
 "RinSta, Ringo Starr, JohLen, GeoHar\nJohLen, John Lennon, PauMcc, RinSta\nGeoHar, George Harrison, RinSta, PauMcc\nPauMcc, Paul McCartney, GeoHar, JohLen"
de-spaced:
(clojure.string/replace (slurp "beatles2014.txt") #", " ",")
=>
"The Beatles,2014
 RinSta,Ringo Starr,JohLen,GeoHar
 JohLen,John Lennon,PauMcc,RinSta
 GeoHar,George Harrison,RinSta,PauMcc
 PauMcc,Paul McCartney,GeoHar,JohLen
 "

parsed:
(csv/parse-csv (clojure.string/replace (slurp "beatles2014.txt") #", " ","))
=>
(["The Beatles" "2014"]
 ["RinSta" "Ringo Starr" "JohLen" "GeoHar"]
 ["JohLen" "John Lennon" "PauMcc" "RinSta"]
 ["GeoHar" "George Harrison" "RinSta" "PauMcc"]
 ["PauMcc" "Paul McCartney" "GeoHar" "JohLen"])

[["RinSta" "Ringo Starr" "JohLen" "GeoHar"]
 ["JohLen" "John Lennon" "PauMcc" "RinSta"]
 ["GeoHar" "George Harrison" "RinSta" "PauMcc"]
 ["PauMcc" "Paul McCartney" "GeoHar" "JohLen"]]

 {:RinSta {:name "Ringo Starr", :gift-history [{:giver :GeoHar, :givee :JohLen}]},
  :JohLen {:name "John Lennon", :gift-history [{:giver :RinSta, :givee :PauMcc}]},
  :GeoHar {:name "George Harrison", :gift-history [{:giver :PauMcc, :givee :RinSta}]},
  :PauMcc {:name "Paul McCartney", :gift-history [{:giver :JohLen, :givee :GeoHar}]}}

((get-in beatles [:GeoHar :gift-history]) 0)
=> {:giver :PauMcc, :givee :RinSta}

(get-in ((get-in beatles [:GeoHar :gift-history]) 0) [:giver])
=> :PauMcc

(get-in beatles [:JohLen :gift-history 0 :givee])
=> :PauMcc

(make-map ["PauMcc" "Paul McCartney" "GeoHar" "JohLen"])
=>
{:PauMcc {:name "Paul McCartney",
          :gift-history [{:giver :JohLen, :givee :GeoHar}]}}

fromList [("GeoHar",Player {name = "George Harrison", giftHist = [GiftPair {giver = "PauMcc", givee = "RinSta"}]}),("JohLen",Player {name = "John Lennon", giftHist = [GiftPair {giver = "RinSta", givee = "PauMcc"}]}),("PauMcc",Player {name = "Paul McCartney", giftHist = [GiftPair {giver = "JohLen", givee = "GeoHar"}]}),("RinSta",Player {name = "Ringo Starr", giftHist = [GiftPair {giver = "GeoHar", givee = "JohLen"}]})]

"RinSta, Ringo Starr, JohLen, GeoHar"

[["RinSta","Ringo Starr","JohLen","GeoHar"],["JohLen","John Lennon","PauMcc","RinSta"],["GeoHar","George Harrison","RinSta","PauMcc"],["PauMcc","Paul McCartney","GeoHar","JohLen"]]

fromList [("PauMcc",Player {name = "Paul McCartney", giftHist = [GiftPair {givee = "GeoHar", giver = "JohLen"}]})]
fromList [("RinSta",Player {name = "Ringo Starr", giftHist = [GiftPair {givee = "JohLen", giver = "GeoHar"}]})]

*Main All_Tests Hat Hat_Test Roster Roster_Test Roster_Utility Rules Rules_Test> makeRosterList "The Beatles, 2014\nRinSta, Ringo Starr, JohLen, GeoHar\nJohLen, John Lennon, PauMcc, RinSta\nGeoHar, George Harrison, RinSta, PauMcc\nPauMcc, Paul McCartney, GeoHar, JohLen"
[["The Beatles","2014"],["RinSta","Ringo Starr","JohLen","GeoHar"],["JohLen","John Lennon","PauMcc","RinSta"],["GeoHar","George Harrison","RinSta","PauMcc"],["PauMcc","Paul McCartney","GeoHar","JohLen"]]
